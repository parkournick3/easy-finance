// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String

  person Person?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Person {
  id        String @id @default(uuid())
  userId    String @unique @map("user_id")
  firstName String @map("first_name")
  lastName  String @map("last_name")

  user         User          @relation(fields: [userId], references: [id])
  accounts     Account[]
  transactions Transaction[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("people")
}

model Account {
  id       String @id @default(uuid())
  balance  Float
  currency String

  people       Person[]
  transactions Transaction[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("accounts")
}

model Transaction {
  id          String   @id @default(uuid())
  accountId   String   @map("account_id")
  personId    String   @map("person_id")
  amount      Float
  description String
  date        DateTime

  account Account @relation(fields: [accountId], references: [id])
  person  Person  @relation(fields: [personId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("transactions")
}
